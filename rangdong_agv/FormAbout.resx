<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panMap.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA/kAAAIuCAIAAABra194AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAFwZJREFUeF7t1lFuXE2yXlFP4L71CDweT9YzdAMCwoXNEMX+WxKDhwtYb/wyKwlU
        Aft//et//gUAADyP1gcAgGfS+gAA8ExaHwAAnknrAwDAM2l9AAB4Jq0PAADPpPUBAOCZtD4AADyT1gcA
        gGfS+gAA8ExaHwAAnknrAwDAM2l9AAB4Jq0PAADPpPUBAOCZtD4AADyT1gcAgGfS+gAA8ExaHwAAnknr
        AwDAM2l9AAB4Jq0PAADPpPUBAOCZtD4AADyT1gcAgGfS+gAA8ExaHwAAnknrAwDAM2l9AAB4Jq0PAADP
        pPUBAOCZtD4AADyT1gcAgGfS+nDC//6//wcA4H3ph1/S+vDb5NcIAPCHJEJ+RuvDP5HfGwDAX5Y4WWl9
        +JD8ugAAPldaZaX14afyiwIAuCPdstL6UPkhAQAclIBZaX34//ITAgA4Kxmz0vog8QGALyYx8zNan28t
        P5tPkScBAPwuWp/vK839W+QjAAA+kdbnO0qg/zO5EwDgGq3Pt5Nk/7jcAwBwnNbnG0m7f0RuAAD4QrQ+
        30Ui/pdyHADgy9H6fAvp+HfkIADA16X1eb7U/M/kFADAV6f1ebgE/SpHAACeQevzZGn6VY4AADyG1ufJ
        kvVvZQ8A8CRan8dK1r+VPQDAw2h9nilZHxkDADyS1ueBUvaRMQDAU2l9HihxHxkDADyV1udpUvaRMQDA
        g2l9HiVlHxkDADyb1udREvevsgQAeDytz3Mk7iNjAIDH0/o8RMo+MgYA+A60Pg+RuH+VJQDAN6H1eYLE
        fWQMAPBNaH2eIHH/KksAgO9D6/PlJe4jYwCA70Pr8+Ul7l9lCQDwrWh9vrbE/assAQC+G63P15a+f5Ul
        AMB3o/X52tL3IzMAgG9I6/OFpe9fZQkA8A1pfb6w9P3IDADge9L6fFXp+1dZAgB8T1qfryp9/ypLAIDv
        SevzJSXuX2UJAPBtaX2+pPT9qywBAL4trc/Xk7h/lSUAwHem9fl60vevsgQA+M60Pl9P+n5kBgDwzWl9
        vpj0/assAQC+Oa3PF5O+H5kBAKD1+UrS96+yBABA6/OVpO9fZQkAgNbnK0nfj8wAAPg3rc+Xkb5/lSUA
        AP+m9fky0vcjMwAAftD6fA3p+1dZAgDwg9bna0jfv8oSAIAftD5fQ/p+ZAYAwND6fAHp+1dZAgAwtD5f
        QPp+ZAYAwCutzxeQxB+ZAQDwSutzXfr+VZYAALzS+pyWuH+VJQAAofU5LX3/KksAAELrc1fiPjIGACC0
        Pncl7l9lCQDAW1qfu9L3r7IEAOAtrc9d6fuRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAAK63PXUn8kRkAACutz11J/JEZAAArrc9dSfyRGQAA
        K63PXUn8kRkAACutz11J/JHZ15L/BQDg49IVv6T1uStf7pHZNXktAMBvl/z4Ga3PXflOj8w+XZ4HAPAX
        JEhWWp+78oUemf19eQ8AwN+XPllpfe7KF3pk9tfkGQAAnyihstL63JUv9MjsT8unAwBckGJZaX3uyhd6
        ZPbn5HMBAO5It6y0PnflCz0y+xPyiQAApyRdfkbrc1e+0yOz3yuf9dvl4wAA/hytz12p5JHZb5QP+sdy
        LQDAp9D63JWAHpn9FvmI/0iuAgA4QutzV5J6ZPbfy/0fkRsAAA7S+tyVvB6Z/Tdy80fkBgCAs7Q+dyWy
        R2b/WK59X84CANyn9bkrtT0y+2dy5ztyEADgq9D63JXmHpn9A7nwZ3IKAOBr0frclfIemf1HctXP5BQA
        wFek9bkr/T0y+7jc8zM5BQDwRWl97kqCj8w+KJescgQA4EvT+tyVEB+ZfURuWOUIAMBXp/W5Ky0+MvuI
        3PBW9gAAD6D1uSs5PjL7pRx/K3sAgGfQ+tyVIh+ZvS9n38oeAOAxtD53JcpHZu/IwbeyBwB4Eq3PXeny
        kdnP5NRb2QMAPIzW566k+chslSNvZQ8A8Dxan7tS5yOzt7J/K3sAgEfS+tyVQB+ZRcZvZQ8A8FRan7vS
        6COzyDgyBgB4MK3PXcn0kdmrLCNjAIBn0/rclVIfmY3MImMAgMfT+tyVWB+Z/ZDNW9kDADye1ueuxPrI
        7N8yeCt7AIDvQOtzV3p9ZPZvGUTGAADfhNbnriT7+ODsh4wBAL4Prc9dqfbxkc0Pr0sAgO9G63NXwn38
        cvDDzAAAvietz11p9/HLwQ8zAwD4nrQ+d6Xdx/t//WEuAQD4trQ+dyXfxzt/+uH1EgCAb0vrc1cK/oNy
        CQDAt6X1uSsR/0G5BADg29L63JWI/4jcAADwnWl97krH/1KOAwB8c1qfu5Ly78tZAAC0Pnel5t+XswAA
        aH3uSs2/IwcBAPg3rc9dCfqfySkAAH7Q+tyVpl/lCAAAQ+tzV7J+lSMAAAytz13J+reyBwDgldbnrpR9
        ZAwAQGh97krcR8YAAITW56iUfWQMAMBbWp+jEvevsgQAYKX1OSp9/ypLAABWWp+j0vevsgQAYKX1OSp9
        /ypLAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS
        +CMzAABWWp+7kvgjMwAAVlqfu5L4IzMAAFZan7uS+CMzAABWWp+j0vevsgQAYKX1OSp9/ypLAABWWp+L
        EveRMQAAK63PRYn7yBgAgJXW55yU/VvZAwCw0vqck7J/K3sAAFZan3NS9m9lDwDASutzS7J+lSMAAKy0
        Prck61c5AgDASutzSJr+Z3IKAICV1ueQNP3P5BQAACutzxUJ+nfkIAAAK63PFQn6d+QgAAArrc8Jqfn3
        5SwAACutzwmp+fflLAAAK63P50vK/1KOAwCw0vp8vqT8L+U4AAArrc8nS8d/RG4AAGCl9flk6fiPyA0A
        AKy0Pp8pEf/qnb++3gAAwM9ofT5TIv7VO399vQEAgJ/R+nyaFPyr9wdzAwAA79D6fI7ke7y/mUsAAHiH
        1udzJN9f/XIzAwAA3qH1+QRp9/jlbAYAALxD6/O3JdzjI8vXDQAAP6P1+atS7fHBcWYAAKy0Pn9Pkv2t
        D+4zAwBgpfX5S9Lrb2X/bxmMzAAAWGl9/obE+lvZ/5DNyAwAgJXW5w9Ko/9MTo3MRmYAAKy0Pn9E6vx9
        OTsyG5kBALDS+vweyfGPyz2vshyZAQCw0vrfRXL5iDwyMh6ZAQCw0vrPl1A+Io9c5cjIDACAldZ/uFTy
        EXnkz+TUyAwAgJXWf7hU8qfL896XsyMzAABWWv/JksifK2/7iNwwMgMAYKX1Hy6V/CnypI/LPSMzAABW
        Wv/hUsl/U17yD+TCkRkAACut/3wJ5T8kH/pb5CNGZgAArLQ+dyXxR2YAAKy0Pncl8UdmAACstD5Hpe9f
        ZQkAwErrc1T6/lWWAACstD4XJe4jYwAAVlqfixL3kTEAACutzzkp+7eyBwBgpfW5JVm/yhEAAFZan1uS
        9ascAQBgpfU5JE3/MzkFAMBK63NImv5ncgoAgJXW54oE/TtyEACAldbnhNT8+3IWAICV1ueE1Pz7chYA
        gJXW5/Ml5X8pxwEAWGl9Plk6/iNyAwAAK63PZ0rEf1AuAQBgpfX5TIn4D8olAACstD6fJgUf7wxeLwEA
        4Ge0Pp8j+R7vb+YSAADeofX5BGn3+OVsBgAAvEPr81el2le/HM8AAIB3aH3+niT76iP71w0AAD+j9fnj
        Uurv+ODBzAAAWGl9/ojU+Ufkhn/LYGQGAMBK6z9fQvmmvPmHbEZmAACstP7DpZJvyptHZiMzAABWWv/h
        UskH5cGvshyZAQCw0voPl0o+JU99K/uRGQAAK63/cKnkI/LIn8mpkRkAACut/3Cp5E+X570vZ0dmAACs
        tP7zJZQ/RZ70QblkZAYAwErrfxfJ5b8gD/gHcuHIDACAldbnriT+yAwAgJXW564k/sgMAICV1ueuJP7I
        DACAldbnriT+yAwAgJXW564k/sgMAICV1ueo9P2rLAEAWGl9jkrfv8oSAICV1ueixH1kDADASutzUeI+
        MgYAYKX1OSdl/1b2AACstD7npOzfyh4AgJXW55yU/VvZAwCw0vrckqx/K3sAAH5G63NLyv6t7AEA+Bmt
        zyHJ+reyBwDgHVqfQ1L2b2UPAMA7tD5XJOtXOQIAwDu0Plck69/KHgCA92l9TkjWr3IEAID3aX0+X5p+
        lSMAAPyS1ufzJevfyh4AgI/Q+nyyZP0qRwAA+Aitz2dK069yBACAD9L6fI4E/VvZAwDwn9L6/G1p+p/J
        KQAA/lNan78nNf+OHAQA4B/Q+vxBKfgPyiUAAPwzWv87SlufkqcCAPCPaf3vJWF9TV4LAMB/Q+t/Iwnr
        a/JaAAD+S1r/G0lb35F3AgDwW2j97yJ5fUQeCQDAb6T1v5F09ufK2wAA+O20/jeS2v4UeRIAAH+O1v9e
        Ut5/Wj4dAIC/SesDAMAzaX0AAHgmrQ8AAM+k9QEA4Jm0PgAAPJPWBwCAZ9L6AADwTFofAACeSesDAMAz
        aX0AAHgmrQ8AAM+k9QEA4Jm0PgAAPJPWBwCAZ9L6AADwTFofAACeSesDAMAzaX0AAHgmrQ8AAM+k9QEA
        4Jm0PgAAPJPWBwCAZ9L6AADwTFofAACeSesDAMAzaX0AAHgmrQ8AAM+k9QEA4Jm0PgAAPJPWBwCAZ9L6
        AADwTFofAACeSesDAMAzaX0AAHgmrQ8AAM+k9QEA4Jm0PgAAPJPWBwCAZ9L6AADwTFofAACeSesDAMAz
        aX0AAHgmrQ8AAM+k9QEA4Jm0PgAAPNH//Ov/Aca+Qb92zGZNAAAAAElFTkSuQmCC
</value>
  </data>
</root>